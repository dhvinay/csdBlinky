/******************************************************************************
 *
 *                          Copyright 2021 Siemens
 *                           All Rights Reserved
 *
 * THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION WHICH IS
 * THE PROPERTY OF SIEMENS OR ITS LICENSORS AND IS SUBJECT TO LICENSE TERMS.
 *
 ******************************************************************************
 *
 * This file is automatically generated by VSC.
 * Do not edit manually!
 * VSC Version:  2.6.8
 * BswMPlugin:   com.mentor.bsw.bswm.generator 5.18.0
 *
 ******************************************************************************
 *
 * Module:       BswM
 *
 * File Name:    BswM_Action.h
 *
 * Description:  Contains declaration of internally used, action handling functions.
 *
 ******************************************************************************/

#ifndef BSWM_ACTION_H
#define BSWM_ACTION_H

/*=============================== INCLUSIONS =================================*/

#include "BswM_GeneratedTypes.h"

/*============================== VERSION INFO ================================*/

#define BSWM_ACTION_SW_MAJOR_VERSION           (5U)
#define BSWM_ACTION_SW_MINOR_VERSION           (18U)
#define BSWM_ACTION_SW_PATCH_VERSION           (0U)

/*============================ TYPE DEFINITIONS ==============================*/

/*============================ MACRO DEFINITIONS =============================*/

/* Maximum size of the required internal flag array holding which
 * ErrorEvent ModeRequestPort shall be cleared */
#define BSWM_ERROREVENT_CURRENTSTATE_SIZE_MAX                  ((uint32) 0U)

/* Maximum size of internal flag array holding which
 * PartitionRestarted ModeRequestPort shall be cleared */
#define BSWM_PARTITIONRESTARTED_CURRENTSTATE_SIZE_MAX          ((uint32) 0U)


/*===================== EXTERNAL VARIABLE DECLARATIONS =======================*/

/*===================== EXTERNAL FUNCTION DECLARATIONS =======================*/

#define BSWM_START_SEC_CODE
#include "BswM_MemMap.h"

#define BSWM_STOP_SEC_CODE
#include "BswM_MemMap.h"




#define BSWM_START_SEC_CODE
#include "BswM_MemMap.h"

/******************************************************************************
 * Function name: BswM_ActionList
 * Description:   Executes the given Action List.
 ******************************************************************************/
FUNC(boolean, BSWM_CODE) BswM_ActionList(
        CONSTP2CONST(BswM_ActionListType, AUTOMATIC, BSWM_CONST) ptrActionList
);

/******************************************************************************
 * Function name: Action_StartupOne
 * Description:   Executes the 'Action_StartupOne' SchmSwitchAction type Action.
 ******************************************************************************/
FUNC(boolean, BSWM_CODE) BswM_SchMSwitch_Action_StartupOne(
        CONSTP2CONST(BswM_ActionListItemType, AUTOMATIC, BSWM_CONST) ptrActionListItem
);

/******************************************************************************
 * Function name: Action_RteStart
 * Description:   Executes the 'Action_RteStart' UserCalloutAction type Action.
 ******************************************************************************/
FUNC(boolean, BSWM_CODE) BswM_UserCallout_Action_RteStart(
        CONSTP2CONST(BswM_ActionListItemType, AUTOMATIC, BSWM_CONST) ptrActionListItem
);

/******************************************************************************
 * Function name: Action_Run
 * Description:   Executes the 'Action_Run' SchmSwitchAction type Action.
 ******************************************************************************/
FUNC(boolean, BSWM_CODE) BswM_SchMSwitch_Action_Run(
        CONSTP2CONST(BswM_ActionListItemType, AUTOMATIC, BSWM_CONST) ptrActionListItem
);

#define BSWM_STOP_SEC_CODE
#include "BswM_MemMap.h"


#endif /* BSWM_ACTION_H */
/*======================= END OF FILE BswM_Action.h ==========================*/
