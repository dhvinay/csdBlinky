/******************************************************************************
* This file is automatically generated by VSC.
* Do not edit manually.
* VSC Version    : 2.6.8
* Plugin Version : com.mentor.bsw.os.PowerPC.MPC5607B 5.9.0
*==============================================================================
*
* Module:       Os
*
* File Name:    Os_RTM.h
*
* Description:  This file shall contain the configuration link time
*               parameters for Runtime Measurement (RTM)
*
******************************************************************************/

#ifndef OS_RTM_H_
#define OS_RTM_H_

/*============================== VERSION INFO ===============================*/

#define OS_RTM_H_SW_MAJOR_VERSION    (5U)
#define OS_RTM_H_SW_MINOR_VERSION    (9U)
#define OS_RTM_H_SW_PATCH_VERSION    (0U)

/*=============================== INCLUSIONS ================================*/

#include "Std_Types.h"
#include "Os_Types.h"

/*============================ TYPE DEFINITIONS =============================*/


/* Definition of event identifiers */
typedef enum
{
    RTM_EVENT_BASE = 0x1,


    RTM_EVENT_END

}RTM_EventType;

/* Definition of interrupt identifiers */
typedef enum
{
    RTM_ISR_CAT2 = 0x0,
    RTM_ISR_TIMER = 0x1000,
    RTM_ISR_MEMORY = 0x2000,
    RTM_ISR_EXCEPTION = 0x4000,
    RTM_ISR_CROSSCORE = 0x8000

}RTMIsrType;

/* ------------------------------ */

/* Definition of object id */
typedef uint8 RTMObjectIdType;

/* ------------------------------ */

/* Storage type for concatenated values */
typedef uint8 RTMConcatenatedType;

/*============================ MACRO DEFINITIONS ============================*/

/* Number of bits of objectId in the concatenated value */
#define RTM_CONCAT_EVENTID_BITS    0U

/* ------------------------------ */

/* Macro to concatenate event identifier, measurement identifier and core identifier into the smallest possible unsigned integer format */
/* MR04 RULE 19.7 VIOLATION For better performance */
#define RTM_CONCAT_VALUES(_eventId)             ((RTMConcatenatedType)_eventId) /* KW MISRA.DEFINE.FUNC MISRA.DEFINE.NOPARS */

/* ------------------------------ */

#define OS_CALL_RTM(_functionName, _coreId)                         RTM_##_functionName() /* MR04 RULE 19.4 VIOLATION Improves readability */ /* MR04 RULE 19.7 VIOLATION For better performance */
#define OS_CALL_RTM_WITH_OBJECT(_functionName, _objectId, _coreId)  RTM_##_functionName(_objectId) /* MR04 RULE 19.4 VIOLATION Improves readability */ /* MR04 RULE 19.7 VIOLATION For better performance */
#define OS_CALL_RTM_WITH_DOUBLE_OBJECT(_functionName, _objectId1, _objectId2, _coreId)  RTM_##_functionName((_objectId1), (_objectId2)) /* MR04 RULE 19.4 VIOLATION Improves readability */ /* MR04 RULE 19.7 VIOLATION For better performance */

/* ------------------------------ */

/* Process state changes */
#define OS_CALL_RTM_PROCESS_STATE_CHANGE(_stateChange, _objectId, _coreId) /* MR04 RULE 19.7 VIOLATION For better performance */

/* Kernel mode enter/exit */
#define OS_CALL_RTM_KERNEL_MODE_API_ENTER(_coreId)                                 /* MR04 RULE 19.7 VIOLATION For better performance */
#define OS_CALL_RTM_KERNEL_MODE_API_EXIT(_coreId)                                  /* MR04 RULE 19.7 VIOLATION For better performance */
#define OS_CALL_RTM_KERNEL_MODE_INTERRUPT_ENTER(_objectId1, _objectId2, _coreId)   /* MR04 RULE 19.7 VIOLATION For better performance */
#define OS_CALL_RTM_KERNEL_MODE_INTERRUPT_EXIT(_objectId1, _objectId2, _coreId)    /* MR04 RULE 19.7 VIOLATION For better performance */

/* Idle mode enter/exit */
#define OS_CALL_RTM_IDLE_MODE_ENTER(_coreId) /* MR04 RULE 19.7 VIOLATION For better performance */
#define OS_CALL_RTM_IDLE_MODE_EXIT(_coreId) /* MR04 RULE 19.7 VIOLATION For better performance */

/* Resource get/release */
#define OS_CALL_RTM_RESOURCE_GET(_objectId, _coreId) /* MR04 RULE 19.7 VIOLATION For better performance */
#define OS_CALL_RTM_RESOURCE_RELEASE(_objectId, _coreId) /* MR04 RULE 19.7 VIOLATION For better performance */

/* Enable/Disable all interrupts */
#define OS_CALL_RTM_ENABLE_ALL_INTERRUPTS(_coreId) /* MR04 RULE 19.7 VIOLATION For better performance */
#define OS_CALL_RTM_DISABLE_ALL_INTERRUPTS(_coreId) /* MR04 RULE 19.7 VIOLATION For better performance */

/* Suspend/Resume all interrupts */
#define OS_CALL_RTM_SUSPEND_ALL_INTERRUPTS(_coreId) /* MR04 RULE 19.7 VIOLATION For better performance */
#define OS_CALL_RTM_RESUME_ALL_INTERRUPTS(_coreId) /* MR04 RULE 19.7 VIOLATION For better performance */

/* Suspend/Resume OS interrupts */
#define OS_CALL_RTM_SUSPEND_OS_INTERRUPTS(_coreId) /* MR04 RULE 19.7 VIOLATION For better performance */
#define OS_CALL_RTM_RESUME_OS_INTERRUPTS(_coreId) /* MR04 RULE 19.7 VIOLATION For better performance */

/* Application state changes */
#define OS_CALL_RTM_APPLICATION_STATE_CHANGE(_stateChange, _objectId, _coreId) /* MR04 RULE 19.7 VIOLATION For better performance */

/* ScheduleTable state changes */
#define OS_CALL_RTM_SCHEDULETABLE_STATE_CHANGE(_stateChange, _objectId, _coreId) /* MR04 RULE 19.7 VIOLATION For better performance */

/* Alarm state changes */
#define OS_CALL_RTM_ALARM_OFF(_objectId, _coreId) /* MR04 RULE 19.7 VIOLATION For better performance */
#define OS_CALL_RTM_ALARM_SET(_objectId, _coreId) /* MR04 RULE 19.7 VIOLATION For better performance */

/*================================ EXTERNALS ================================*/

/* ============================== */
#define OS_START_SEC_PUBLIC_CODE
#include OS_MEMMAP_HEADER                   /* MR04 RULE 19.1 VIOLATION Autosar requirement to be implemented this way */
/* ============================== */


/* ============================== */
#define OS_STOP_SEC_PUBLIC_CODE
#include OS_MEMMAP_HEADER                   /* MR04 RULE 19.1 VIOLATION Autosar requirement to be implemented this way */
/* ============================== */

/**********************************************************************/
#endif /* OS_RTM_H_ */
/**********************************************************************/
/* End of Os_RTM.h */
